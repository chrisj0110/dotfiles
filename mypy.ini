[mypy]

# uses sqlalchemy[mypy]
plugins = sqlalchemy.ext.mypy.plugin

# these are to handle naming conflicts (two dirs with the same name in diff packages): https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules
namespace_packages = True
explicit_package_bases = True

# if third-party package doesn't have stubs, just treat everything as Any. (It would be better to find/make stubs)
ignore_missing_imports = True

# TODO: This flag disallows functions that have Any in their signature.
# disallow_any_decorated = True

# TODO: require x: list[int] rather than x: list.
# disallow_any_generics = True

# error whenever it encounters a function definition without type annotations
disallow_untyped_defs = True

# error whenever it encounters a partly annotated function definition
disallow_incomplete_defs = True

# x: int = None param must be x: Optional[int] = None
no_implicit_optional = True

# warning when returning a value with type Any from a function declared with a non-Any return type.
# TODO: disabled because this sometimes warns when it shouldn't; not sure if it's a mypy bug?
# warn_return_any = True

# warns about casting an expression to its inferred type.
warn_redundant_casts = True

# might be needed someday because of https://github.com/python/mypy/issues/4717
# disable_error_code = type-abstract

# TODO: warns about unneeded # type: ignore comments.
# warn_unused_ignores = True

# TODO: error whenever it encounters code determined to be unreachable or redundant after performing type analysis.
# warn_unreachable = True

# prohibit comparisons of non-overlapping types, and similar identity and container checks.
strict_equality = True

# maybe someday!
# strict = True

# output
pretty = True
